# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Baidu
# This file is distributed under the same license as the Bigflow Python
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Bigflow Python 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-01-02 17:07+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../index.rst:7
msgid "欢迎来到Bigflow Python项目"
msgstr ""

#: ../../index.rst:10
msgid "Bigflow是什么?"
msgstr ""

#: ../../index.rst:12
msgid ""
"**Baidu Bigflow** (以下简称Bigflow)是百度的一套计算框架， "
"它致力于提供一套简单易用的接口来描述用户的计算任务，并使同一套代码可以运行在不同的执行引擎之上。"
msgstr ""

#: ../../index.rst:14
msgid ""
"它的设计中有许多思想借鉴自 `google flume java "
"<http://pages.cs.wisc.edu/~akella/CS838/F12/838-CloudPapers/FlumeJava.pdf>`_"
" 以及 `google cloud bigflow "
"<https://github.com/GoogleCloudPlatform/BigflowJavaSDK/>`_ ，另有部分接口设计借鉴自 "
"`apache spark <http://spark.apache.org/>`_ 。"
msgstr ""

#: ../../index.rst:16
msgid ""
"用户基本可以不去关心Bigflow的计算真正运行在哪里，可以像写一个单机的程序一样写出自己的逻辑， "
"Bigflow会将这些计算分发到相应的执行引擎之上执行。"
msgstr ""

#: ../../index.rst:18
msgid "Bigflow的目标是: 使分布式程序写起来更简单，测起来更方便，跑起来更高效，维护起来更容易，迁移起来成本更小。"
msgstr ""

#: ../../index.rst:20
msgid "目前Bigflow在百度公司内部对接了公司内部的批量计算引擎DCE（与社区Tez比较类似），迭代引擎Spark，以及公司内部的流式计算引擎Gemini。"
msgstr ""

#: ../../index.rst:22
msgid "在开源版本中，目前仅开放了Bigflow on Spark。"
msgstr ""

#: ../../index.rst:25
msgid "为什么要使用Bigflow?"
msgstr ""

#: ../../index.rst:27
msgid "虽然Bigflow目前仅仅开源了Bigflow on Spark，但仍有许多理由让你选择Bigflow on Spark:"
msgstr ""

#: ../../index.rst:29
msgid "**高性能**"
msgstr ""

#: ../../index.rst:31
msgid "Bigflow的接口设计使得Bigflow可以感知更多的用户需求的细节属性，并且Bigflow会根据计算的属性进行作业的优化；另其执行层使用C++实现，用户的一些代码逻辑会被翻译为C++执行，有较大的性能提升。"
msgstr ""

#: ../../index.rst:33
msgid "在公司内部的实际业务测试来看，其性能远高于用户手写的作业。根据一些从现有业务改写过来的作业平均来看，其性能都比原用户代码提升了100%+。"
msgstr ""

#: ../../index.rst:35
msgid "开源版本的benchmark正在准备中。"
msgstr ""

#: ../../index.rst:37
msgid "**简单易用**"
msgstr ""

#: ../../index.rst:39
msgid "Bigflow的接口表面看起来很像Spark，但实际实用之后会发现Bigflow使用一些独特的设计使得Bigflow的代码更像是单机程序，例如，屏蔽了partitioner的概念，支持嵌套的分布式数据集等，使得其接口更加易于理解，并且拥有更强的代码可复用性。"
msgstr ""

#: ../../index.rst:41
msgid "特别的，在许多需要优化的场景中，因为Bigflow的可以进行自动的性能以及内存占用优化，所以用户可以避免许多因OOM或性能不足而必须进行的优化工作，降低用户的使用成本。"
msgstr ""

#: ../../index.rst:43
msgid "**在这里，Python是一等公民**"
msgstr ""

#: ../../index.rst:45
msgid "我们目前原生支持的语言是Python。"
msgstr ""

#: ../../index.rst:47
msgid "使用PySpark时，有不少用户都困扰于PySpark的低效，或困扰于其不支持某些CPython库，或困扰于一些功能仅在Scala和Java中可用，在PySpark中暂时处于不可用状态。"
msgstr ""

#: ../../index.rst:49
msgid "而在Bigflow中，Python是一等公民（毕竟当前我们仅仅支持Python），以上问题在Bigflow中都不是问题，性能、功能、易用性都对Python用户比较友好。"
msgstr ""

#: ../../index.rst:53
msgid "在线试用"
msgstr ""

#: ../../index.rst:54
msgid ""
"`在线试用网页 "
"<http://180.76.236.159:8732/?token=9a1bd5c7aeb2b217bef4e85c007f275e82744ba33f42eaf9>`_"
" (passwd: bigflow) "
"包含了一些简单的例子介绍Bigflow的概念和API用法，同时也可以在线编写Python代码尝试Bigflow的功能，可智能提示。"
msgstr ""

#: ../../index.rst:56
msgid "注：该页面仅提供试用功能，并没有做安全防护，相关机器每隔一段时间会被清空一次，请不要做代码存储等操作。"
msgstr ""

#: ../../index.rst:60
msgid "文档索引"
msgstr ""

#: ../../index.rst:63
msgid "使用者文档"
msgstr ""

#: ../../index.rst:65
msgid ":doc:`快速入门 <quickstart>`"
msgstr ""

#: ../../index.rst:66
msgid ":doc:`编程指南 <guide>`"
msgstr ""

#: ../../index.rst:67
msgid ":doc:`API参考 <rst/modules>`"
msgstr ""

#: ../../index.rst:68
msgid ":doc:`相关ppt <ppt>`"
msgstr ""

#: ../../index.rst:71
msgid "开发者文档"
msgstr ""

#: ../../index.rst:72
msgid ":doc:`编译构建 <build>`"
msgstr ""

#: ../../index.rst:73
msgid ":doc:`如何贡献 <contributing>`"
msgstr ""

#: ../../index.rst:74
msgid ":doc:`设计文档 <bigflow_design>`"
msgstr ""

#: ../../index.rst:77
msgid "Github"
msgstr ""

#: ../../index.rst:79
msgid "`Bigflow <https://github.com/baidu/bigflow>`_"
msgstr ""

