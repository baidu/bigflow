language: cpp

cache:
    directories:
        - $HOME/ccache

sudo: required

services:
  - docker

os:
  - linux

env:
  - JOB=build_doc
  - JOB=build

branches:
  only:
    - master

install:
    - echo ok

script:
  - |
    if [[ "$JOB" == "build" ]]; then docker run -t -v $PWD:/root/bigflow -v $HOME/ccache:/root/ccache centos:7.1.1503 bash -c "export MAKEFLAGS='-j 4'; yum install sudo -y -q && cd /root/bigflow/build_support && sh -x build_deps.sh && source ./environment && mkdir /root/bigflow/build && cd /root/bigflow/build && cmake .. && export CCACHE_DIR=/root/ccache; CC='ccache gcc' CXX='ccache g++' make && make release > release.log && cd /root/bigflow/bigflow_python/python && PARALLEL_NUM=4 sh run-tests"; fi;
    if [[ "$JOB" == "build_doc" ]]; then docker run -t -v $PWD:/root/bigflow centos:7.1.1503 bash -c "yum install sudo wget curl tar -y -q && cd /root/bigflow/build_support && sh -x build_deps.sh && source ./environment && mkdir /root/bigflow/jq && cd /root/bigflow/jq &&  wget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 -O jq && chmod +x ./jq && mkdir /root/bigflow/lastest_release && cd /root/bigflow/lastest_release && curl -s https://api.github.com/repos/baidu/bigflow/releases/latest | /root/bigflow/jq/jq -r '.assets[] | .browser_download_url' | xargs wget && tar zxf bigflow_python.tar.gz && cp -r python_runtime /root/bigflow/bigflow_python/python && cp flume/worker /root/bigflow/bigflow_python/python/flume && cd /root/bigflow/doc/ && sh generate_doc.sh"; fi;


deploy:
  - provider: releases
    api_key: $GITHUB_TOKEN
    file: "bigflow_python/output/bigflow_python.tar.gz"
    skip_cleanup: true
    on:
      repo: baidu/bigflow
      tags: true
      condition: "$JOB = build"
  - provider: pages
    skip_cleanup: true
    github_token: $GITHUB_TOKEN
    on:
      branch: master
      repo: baidu/bigflow
      condition: "$JOB = build_doc"
    local_dir: ./doc/html
